# -*- coding: utf-8 -*-
"""Transfer_Learning.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gaoAghiSa2jK8muceUgrjw6cYTkIhQsR
"""

from google.colab import drive
drive.mount('/content/drive/')

!ls "/content/drive/My Drive/"

!unzip "/content/drive/My Drive/NEW DATA (1).zip"

!cp /content/drive/My\ Drive/transfer.py ./

!cp /content/drive/My\ Drive/transfer_7class.py ./

!python transfer.py

!python transfer.py --nb_epoch 100 --batch_size 50 --plot --output_model_file inception-model.h5

!cp inceptionv3-ft.model /content/drive/My\ Drive/

!python transfer_3class.py --nb_epoch 100 --batch_size 320 --plot --output_model_file inception-model-v1.h5

!python transfer_7class.py --nb_epoch 100 --batch_size 320 --plot --output_model_file inception-model-v2.h5

!cp /content/drive/My\ Drive/pose6.jpg ./
!cp /content/drive/My\ Drive/pose6s.jpg ./

#!python predict.py --image pose2.jpg --model inception-model.h5
from keras.models import load_model
from keras.preprocessing import image
import numpy as np
from keras.applications.inception_v3 import preprocess_input

# dimensions of our images
img_width, img_height = 299, 299

# load the model we saved
model = load_model('inception-model-v2.h5')

# predicting images
img = image.load_img('pose3.jpg', target_size=(img_width, img_height))
x = image.img_to_array(img)
x = np.expand_dims(x, axis=0)
x = preprocess_input(x)
preds = model.predict(x)
print(preds[0])


# predicting images
img1 = image.load_img('pose4.jpg', target_size=(img_width, img_height))
x1 = image.img_to_array(img1)
x1 = np.expand_dims(x1, axis=0)
x1 = preprocess_input(x1)
preds1 = model.predict(x1)
print(preds1[0])

# predicting images
img2 = image.load_img('pose4f.png', target_size=(img_width, img_height))
x2 = image.img_to_array(img2)
x2 = np.expand_dims(x2, axis=0)
x2 = preprocess_input(x2)
preds2 = model.predict(x2)
print(preds2[0])

# predicting images
img3 = image.load_img('pose7.png', target_size=(img_width, img_height))
x3 = image.img_to_array(img3)
x3 = np.expand_dims(x3, axis=0)
x3 = preprocess_input(x3)
preds3 = model.predict(x3)
print(preds3[0])

# predicting images
img4 = image.load_img('pose7f.jpg', target_size=(img_width, img_height))
x4 = image.img_to_array(img4)
x4 = np.expand_dims(x4, axis=0)
x4 = preprocess_input(x4)
preds4 = model.predict(x4)
print(preds4[0])

# predicting images
img3 = image.load_img('pose6.jpg', target_size=(img_width, img_height))
x3 = image.img_to_array(img3)
x3 = np.expand_dims(x3, axis=0)
x3 = preprocess_input(x3)
preds3 = model.predict(x3)
print(preds3[0])

# predicting images
img4 = image.load_img('pose6s.jpg', target_size=(img_width, img_height))
x4 = image.img_to_array(img4)
x4 = np.expand_dims(x4, axis=0)
x4 = preprocess_input(x4)
preds4 = model.predict(x4)
print(preds4[0])